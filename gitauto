#!/usr/bin/env bash

# gitauto - Zero-interaction Git multi-repo committer with enhanced features

# Get starting directory (current by default)
ROOT_DIR="${1:-$(pwd)}"

echo -e "\nüîç Searching Git repositories under: \033[1;34m$ROOT_DIR\033[0m"
REPOS=$(find "$ROOT_DIR" -type d -name ".git" 2>/dev/null)

if [[ -z "$REPOS" ]]; then
    echo "‚ùå No Git repositories found."
    exit 1
fi

echo -e "‚ÑπÔ∏è  Found \033[1;33m$(echo "$REPOS" | wc -l)\033[0m repositories to process\n"

for GIT_DIR in $REPOS; do
    REPO_DIR=$(dirname "$GIT_DIR")
    cd "$REPO_DIR" || continue

    # Get repo name with relative path for better readability
    REPO_NAME="${REPO_DIR#$ROOT_DIR/}"

    # Check for changes
    CHANGES=$(git status --porcelain 2>/dev/null)
    if [[ -n "$CHANGES" ]]; then
        # Count modified files by type
        FILE_COUNT=$(echo "$CHANGES" | wc -l | tr -d ' ')
        MODIFIED=$(echo "$CHANGES" | grep -c '^ M' || true)
        ADDED=$(echo "$CHANGES" | grep -c '^A ' || true)
        DELETED=$(echo "$CHANGES" | grep -c '^ D' || true)
        
        # Get remote URL (more robust handling)
        REMOTE_URL=$(git remote get-url origin 2>/dev/null || echo "local-only")

        # Generate detailed commit message with "from gitauto"
        COMMIT_MESSAGE="Auto-commit: $FILE_COUNT changes ($MODIFIED modified, $ADDED added, $DELETED deleted) in $REPO_NAME [from gitauto]"
        
        echo -e "\nüì¶ Repository: \033[1;35m$REPO_NAME\033[0m"
        echo -e "üìä Changes: \033[33m$FILE_COUNT total\033[0m (\033[32m$ADDED added\033[0m, \033[31m$DELETED deleted\033[0m, \033[34m$MODIFIED modified\033[0m)"
        echo -e "üåê Remote: \033[36m${REMOTE_URL//%//%%}\033[0m"
        echo -e "üíæ Committing changes..."

        # Git operations with error handling
        if git add . && \
           git commit -m "$COMMIT_MESSAGE"; then
            # Push to current branch if remote exists
            if [[ "$REMOTE_URL" != "local-only" ]]; then
                CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
                echo -e "üöÄ Pushing to \033[1;32m$CURRENT_BRANCH\033[0m..."
                git push origin "$CURRENT_BRANCH"
            else
                echo "‚ö†Ô∏è  No remote - skipping push"
            fi
        else
            echo "‚ùå Failed to commit changes"
        fi
    else
        echo -e "‚úÖ \033[1;36m$REPO_NAME\033[0m: No changes detected"
    fi
done

echo -e "\nüéâ \033[1;32mgitauto completed successfully!\033[0m"
# No emojis present in this file.
